services:
  backend:
    image: python:3.9
    working_dir: /app
    volumes:
      - ./backend:/app
    command: bash -c "pip install -r requirements.txt && flask run --host=0.0.0.0"
    ports:
      - "5000:5000"
    environment:
      FLASK_DEBUG: "1"
    depends_on:
      - mysql
    profiles:
      - dev

  backend-prod:
    image: python:3.9
    working_dir: /app
    volumes:
      - ./backend:/app
    command: bash -c "pip install -r requirements.txt && pip install waitress && waitress-serve --port=5000 --call 'app:create_app'"
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    profiles:
      - prod

  frontend:
    image: node:16
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: bash -c "yarn install && yarn start"
    ports:
      - "3000:3000"
    profiles:
      - dev

  frontend-prod:
    image: node:16
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: bash -c "yarn install && yarn build && yarn global add serve && serve -s build"
    ports:
      - "3000:3000"
    profiles:
      - prod

  mysql:
    image: mysql:8
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: backend
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    profiles:
      - dev
      - prod

  s3:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data --console-address ":4000"
    ports:
      - "9000:9000"
      - "4000:4000"
    volumes:
      - s3_data:/data
    profiles:
      - dev
      - prod

volumes:
  db_data:
  s3_data:
